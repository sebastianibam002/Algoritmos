#include "vec2d.hpp"


Vector2D::Vector2D(){ //constructor
  x = 0.;
  y = 0.;
}

Vector2D::~Vector2D(){} //destructor

double Vector2D::get_x() {
  return x;
}

double Vector2D::get_y() {
  return y;
}

void Vector2D::set_x(double X) {
  x = X;
}

void Vector2D::set_y(double Y) {
  y = Y;
}

Vector2D& Vector2D::operator=(Vector2D& v) {
  x = v.x;
  y = v.y;
  return *this;
}

double Vector2D::norm(){ //method
  return sqrt(x*x + y*y);
}

double operator*(Vector2D& v1, Vector2D& v2) {
  return v1.get_x()*v2.get_x() + v1.get_y()*v2.get_y();
}

Vector2D operator*(Vector2D& v, double d) {
  Vector2D newv;
  newv.set_x(v.get_x()*d);
  newv.set_y(v.get_y()*d);
  return newv;
}

Vector2D operator*(double d, Vector2D& v) {
  Vector2D newv;
  newv.set_x(v.get_x()*d);
  newv.set_y(v.get_y()*d);
  return newv;
}

ofstream& operator<<(ofstream& os, Vector2D& V)
{
  //quiero que me imprima la parejita x,y
  //al string de salida, es decir el os (x,y)
  os<< "(" <<V.get_X()<<","<<V.getY()<<")";
  //puede ser cout o el archivo, meta la cadena de caracteres y retorna una referencia a ese ofstream
  return os;
}
